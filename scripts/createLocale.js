import * as fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const locales = ['ru', 'en'];
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename).split('scripts')[0] + 'locales/';

const args = (locale) => [
	`${__dirname}${locale}/${process.argv[2] || 'main'}.json`,
	JSON.stringify(
		{
			name: process.argv[2] || 'main',
			locale,
			translations: {}
		},
		null,
		4
	)
];

let importData = '';

locales.forEach((locale) => {
	if (!fs.existsSync(__dirname + locale.toLowerCase())) {
		fs.mkdirSync(__dirname + locale);
	}
	if (!fs.existsSync(`${__dirname}${locale.toLowerCase()}/${process.argv[2] || 'main'}.json`)) {
		fs.writeFileSync(...args(locale));
	} else {
		// eslint-disable-next-line no-console
		console.log('File already exist');
	}

	importData += fs.readdirSync(__dirname + locale).reduce((acc, curr) => {
		const fileName = curr.split('.json')[0];

		// Return import as 'import authEn from './en/auth.json''
		return `${acc}import ${
			// File name w/o format like auth.json => auth
			fileName
		}${
			// Current Locale in right form like en => En
			locale[0].toUpperCase() + locale.toLowerCase().slice(1)
		} from './${locale.toLowerCase()}/${fileName}.json';\n`;
	}, '');
});

const exportData = locales.reduce((acc, locale, localeIndex, locales) => {
	const files = fs.readdirSync(__dirname + locale);
	const result = files.reduce((acc, file, filesIndex) => {
		const fileName = file.split('.json')[0];

		return `${acc}\t${fileName}${locale[0].toUpperCase() + locale.toLowerCase().slice(1)}${
			locales.length - 1 === localeIndex && files.length - 1 === filesIndex ? '' : ','
		}\n`;
	}, '');
	return (acc += result);
}, '');

const warning = '// AUTOGENERATED, DO NOT CHANGE MANUALLY\n\n';
fs.writeFileSync(__dirname + 'locales.ts', `${warning}${importData}\nexport {\n${exportData}};\n`);
